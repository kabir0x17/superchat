{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","analytics","SignIn","className","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","dummy","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","placeholder","type","props","messageClass","src","alt","App","useAuthState","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAYAA,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,sCACZC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGjB,IAAMC,EAAOT,IAASS,OAChBC,EAAYV,IAASU,YACTV,IAASW,YAiB3B,SAASC,IAMP,OACE,qCACE,wBAAQC,UAAU,UAAUC,QAPP,WACvB,IAAMC,EAAW,IAAIf,IAASS,KAAKO,mBACnCP,EAAKQ,gBAAgBF,IAKnB,iCADF,IAEE,2GAON,SAASG,IACP,OAAOT,EAAKU,aACZ,wBAAQN,UAAU,WAAWC,QAAS,kBAAML,EAAKW,WAAjD,sBAKF,SAASC,IACP,IAAMC,EAAQC,mBAERC,EAAcd,EAAUe,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,IAErD,EAAmBC,YAAkBH,EAAO,CAAEI,QAAS,OAAhDC,EAAP,oBACA,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,EAGQ7B,EAAKU,YAAvBoB,EAHU,EAGVA,IAAKC,EAHK,EAGLA,SAHK,SAKZhB,EAAYiB,IAAI,CACpBC,KAAMT,EACNU,UAAW3C,IAASU,UAAUkC,WAAWC,kBACzCN,MACAC,aATgB,OAYlBN,EAAa,IAEbZ,EAAMwB,QAAQC,eAAe,CAAEC,SAAU,WAdvB,2CAAH,sDAiBjB,OACE,qCACE,iCACGjB,GACCA,EAASkB,KAAI,SAACC,GAAD,OAAS,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OAE9C,sBAAMC,IAAKhC,OAGb,uBAAMiC,SAAUpB,EAAhB,UACE,uBACEqB,MAAOvB,EACPwB,SAAU,SAACrB,GAAD,OAAOF,EAAaE,EAAEsB,OAAOF,QAAQG,YAAY,uBAE7D,wBAAQC,KAAK,SAAb,sCAMR,SAAST,EAAYU,GACnB,MAAgCA,EAAMT,QAA9BV,EAAR,EAAQA,KAAMH,EAAd,EAAcA,IAAKC,EAAnB,EAAmBA,SAEbsB,EAAevB,IAAQ9B,EAAKU,YAAYoB,IAAM,OAAS,WAE7D,OACE,sBAAK1B,UAAS,kBAAaiD,GAA3B,UACE,qBAAKC,IAAKvB,GAAY,wDAAyDwB,IAAI,SACnF,4BAAItB,OAKKuB,MAjGf,WACE,MAAeC,YAAazD,GAArB0D,EAAP,oBAEA,OACE,sBAAKtD,UAAU,MAAf,UACE,mCACE,sEACA,cAACK,EAAD,OAGF,kCAAUiD,EAAO,cAAC9C,EAAD,IAAe,cAACT,EAAD,UCxBvBwD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.53267278.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './App.css';\r\n\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore';\r\nimport 'firebase/compat/analytics';\r\n\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\n// import { queryByRole } from '@testing-library/dom';\r\n\r\nfirebase.initializeApp({\r\n  apiKey: 'AIzaSyBLJNT8ydgE3-UCPVtVxrORdVZ8KJnnkJA',\r\n  authDomain: 'superchat-react-tcw.firebaseapp.com',\r\n  projectId: 'superchat-react-tcw',\r\n  storageBucket: 'superchat-react-tcw.appspot.com',\r\n  messagingSenderId: '679430964883',\r\n  appId: '1:679430964883:web:e9ce35ba4b24d079852f66',\r\n  measurementId: 'G-MG7QTMG59E',\r\n});\r\n\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\nconst analytics = firebase.analytics();\r\n\r\nfunction App() {\r\n  const [user] = useAuthState(auth);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <h1>‚öõÔ∏èüî•üí¨</h1>\r\n        <SignOut />\r\n      </header>\r\n\r\n      <section>{user ? <ChatRoom /> : <SignIn />}</section>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SignIn() {\r\n  const signInWithGoogle = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    auth.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button className='sign-in' onClick={signInWithGoogle}>Sign in with Google</button>;\r\n      <p>\r\n        Do not violate the community guidelines or you will be banned for life!\r\n      </p>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction SignOut() {\r\n  return auth.currentUser && (\r\n  <button className='sign-out' onClick={() => auth.signOut()}>Sign out</button>\r\n    )\r\n  \r\n}\r\n\r\nfunction ChatRoom() {\r\n  const dummy = useRef();\r\n\r\n  const messagesRef = firestore.collection('messages');\r\n  const query = messagesRef.orderBy('createdAt').limit(25);\r\n\r\n  const [messages] = useCollectionData(query, { idField: 'id' });\r\n  const [formValue, setFormValue] = useState('');\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { uid, photoURL } = auth.currentUser;\r\n\r\n    await messagesRef.add({\r\n      text: formValue,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n      uid,\r\n      photoURL,\r\n    });\r\n\r\n    setFormValue('');\r\n\r\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        {messages &&\r\n          messages.map((msg) => <ChatMessage key={msg.id} message={msg} />)}\r\n\r\n        <span ref={dummy}></span>\r\n      </main>\r\n\r\n      <form onSubmit={sendMessage}>\r\n        <input\r\n          value={formValue}\r\n          onChange={(e) => setFormValue(e.target.value)} placeholder=\"say something nice\"\r\n        />\r\n        <button type=\"submit\">üïäÔ∏è</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ChatMessage(props) {\r\n  const { text, uid, photoURL } = props.message;\r\n\r\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\r\n\r\n  return (\r\n    <div className={`message ${messageClass}`}>\r\n      <img src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} alt=\"User\" />\r\n      <p>{text}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}